/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bbc.karate.club;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Abhirham
 */
public class addstud extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    public int i=0;
//    public String set="unset";
    /**
     * Creates new form addstud
     */
    public addstud() {
        initComponents();
        gen.setVisible(false);
        try {
            conn = sqlcon.connecrDB();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "JDBC connction failed");
        }
        
        setsid();
        sid.setEditable(false);
        dob.setDateFormatString("yyyy-MM-dd");
        doj.setDateFormatString("yyyy-MM-dd");
        Date date = new Date();
        dob.setMaxSelectableDate(date);
            doj.setMaxSelectableDate(date);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        executebtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel10 = new javax.swing.JLabel();
        zip = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        apt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        country = new javax.swing.JTextField();
        state = new javax.swing.JTextField();
        city = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        email = new javax.swing.JTextField();
        mobile = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        doj = new com.toedter.calendar.JDateChooser();
        sid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        parent = new javax.swing.JCheckBox();
        func = new javax.swing.JComboBox<>();
        gen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TORONTO");

        executebtn.setText("Create");
        executebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executebtnActionPerformed(evt);
            }
        });

        jButton2.setText("back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));

        jLabel10.setText("City :");

        jLabel11.setText("State :");

        jLabel12.setText("Country :");

        jLabel9.setText("Apartment no:");

        jLabel13.setText("Zip :");

        jLayeredPane2.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(zip, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(apt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(country, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(state, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(city, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(apt)
                            .addComponent(state)
                            .addComponent(zip, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(apt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(zip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emailMouseClicked(evt);
            }
        });
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jLabel1.setText("Student no:");

        doj.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dojPropertyChange(evt);
            }
        });

        jLabel5.setText("Mobile no:");

        jLabel6.setText("email:");

        jLabel2.setText("First Name:");

        jLabel4.setText("Date of Join:");

        jLabel8.setText("DOB:");

        jLabel3.setText("Last Name:");

        parent.setText("Is a parent?");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(72, 72, 72)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel6)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doj, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(sid))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addGap(17, 17, 17)
                                .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(parent))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(doj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        func.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Create", "Update" }));
        func.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                funcItemStateChanged(evt);
            }
        });
        func.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcActionPerformed(evt);
            }
        });

        gen.setText("View Student");
        gen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(func, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(gen)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(executebtn)
                        .addGap(100, 100, 100)
                        .addComponent(jButton2)))
                .addGap(0, 58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(func, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane2)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(executebtn)
                    .addComponent(jButton2))
                .addGap(187, 187, 187))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dojPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dojPropertyChange
             // TODO add your handling code here:
    }//GEN-LAST:event_dojPropertyChange

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
          // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void emailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailMouseClicked
//   Date dob1 = dob.getDate();   
//   Date doj1 = doj.getDate();
//    int year = getage(doj1, dob1);
//email.setText(""+year);// TODO add your handling code here:
    }//GEN-LAST:event_emailMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try {
               conn.close();
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "jdbc closing failed");
           }
        studhome a = new studhome();
       a.setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void executebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executebtnActionPerformed
       Date dob1 = dob.getDate();   
        Date doj1 = doj.getDate();
        
        int p;
        if(parent.isSelected())
            p=1;
        else
            p=0;
        
        String fun = func.getSelectedItem().toString();
      if(fun.equals("Create")){
        if(checknull()){
            if(mobile.getText().length()!=10)
                 JOptionPane.showMessageDialog(null, "Phone number should contain 10 digits!");
            else{
        try {
            String sql = "insert into STUDENT (STU_FNAME,STU_LNAME,STU_DOB,STU_JOIN_DATE,STU_EMAIL,STU_MOB,STU_APPARTMENT,STU_CITY,STU_STATE,STU_COUNTRY,STU_ZIP,STU_IS_PARENT) values (?,?,?,?,?,?,?,?,?,?,?,?)";
            pst = conn.prepareStatement(sql);
            pst.setString(1, fname.getText());
            pst.setString(2, lname.getText());
            pst.setString(3, getdate(dob1));
            pst.setString(4, getdate(doj1));
            pst.setString(5, email.getText());
            pst.setString(6, mobile.getText());
            pst.setString(7, apt.getText());
            pst.setString(8, city.getText());
            pst.setString(9, state.getText());
            pst.setString(10, country.getText());
            pst.setString(11, zip.getText());
            pst.setString(12, ""+p);
            pst.execute();
            
            sql="INSERT INTO ACHIEVEMENT VALUES(1,?,?);";
      pst = conn.prepareStatement(sql);
      pst.setString(1, sid.getText());
      pst.setString(2, getdate(doj1));
//      pst.setString(3, getdate(achievedate));
      
      
      pst.execute();
            
            JOptionPane.showMessageDialog(null, "Student added sucessfully");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        int year = getage(doj1, dob1);
        int i = Integer.parseInt(sid.getText());
        if(year<19){
            new addparent(i).setVisible(true);
            this.dispose();
           try {
               conn.close();
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "jdbc closing failed");
           }
        }else{
            addstud a= new addstud();
           a.setVisible(true);
            this.dispose();
        }}
        }else
            JOptionPane.showMessageDialog(null, "Enter all fields!");
      }else if(fun.equals("Update")){
          
          if(checknull()){
          try {
              
          String sql = "update STUDENT set STU_FNAME='"+fname.getText()+"' ,STU_LNAME='"+lname.getText()+"',STU_DOB='"+getdate(dob1)+"',STU_JOIN_DATE='"+getdate(doj1)+"',STU_EMAIL='"+email.getText()+"',STU_MOB='"+mobile.getText()+"',STU_APPARTMENT='"+apt.getText()+"',STU_CITY='"+city.getText()+"',STU_STATE='"+state.getText()+"',STU_COUNTRY='"+country.getText()+"',STU_ZIP='"+zip.getText()+"',STU_IS_PARENT='"+Integer.toString(p)+"' where STU_NUM=?";
//            String sqll = "update STUDENT set STU_FNAME='"+fname.getText()+"' where STU_NUM=5";
            pst = conn.prepareStatement(sql);
            pst.setString(1, sid.getText());
            pst.execute();
                JOptionPane.showMessageDialog(null, "Student updated sucessfully");
            
            } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Execution failed");
        }
          addstud a= new addstud();
           a.setVisible(true);
            this.dispose();
          }else{
              JOptionPane.showMessageDialog(null, "Enter all fields!");
          }
      }
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_executebtnActionPerformed

    private void funcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_funcItemStateChanged
      String a = func.getSelectedItem().toString();
      if(a.equals("Create")){
          resetfields();
          executebtn.setText("Create");
          setsid();
          gen.setVisible(false);
          sid.setEditable(false);
          allowfields(true);
      }else if(a.equals("Update")){
          executebtn.setText("Update");
          gen.setVisible(true);
          sid.setText("");
          sid.setEditable(true);
          allowfields(false);
      }// TODO add your handling code here:
    }//GEN-LAST:event_funcItemStateChanged

    private void genActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genActionPerformed
        if(!sid.getText().equals("")){
           try {
                if(studexist()){
//                    set="set";
                    allowfields(true);
                    setfields();
                }else{
                    JOptionPane.showMessageDialog(null, "student doesnt exist");
                    allowfields(false);
                }
                    
                    
                
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Error with view student btn");
            }
    }else
       JOptionPane.showMessageDialog(null, "Please enter the student id"); // TODO add your handling code here:
    }//GEN-LAST:event_genActionPerformed

    private void funcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_funcActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addstud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addstud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addstud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addstud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addstud().setVisible(true);
            }
        });
    }
    public int getage(Date doj, Date dob){
        
        Calendar c = Calendar.getInstance();
//        long ageInMillis =doj.getTime() - dob.getTime();
        c.setTime(doj);
        int join = c.get(Calendar.YEAR);
        int a = c.get(Calendar.DAY_OF_MONTH);
        int amonth = c.get(Calendar.MONTH);
        c.setTime(dob);
        int born = c.get(Calendar.YEAR);
        int b = c.get(Calendar.DAY_OF_MONTH);
        int bmonth = c.get(Calendar.MONTH);
        int years = join-born;
        if(b>a || bmonth>amonth)
            years--;
//        Date age = new Date(ageInMillis);
        return years;
        
        
    }
    
    public String getdate(Date a){
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String s = df.format(a);
        return s;
    }
    
    public boolean setfields() throws ParseException{
        Date date;
        int par=0;
        String datob=null,datoj=null;
        try {
        String sql = "Select * from STUDENT where STU_NUM="+sid.getText()+"";
        pst = conn.prepareStatement(sql);
//        pst.setString(1, sid.getText());
        rs = pst.executeQuery();
        while(rs.next()){
            
        
                fname.setText(rs.getString("STU_FNAME"));
                lname.setText(rs.getString("STU_LNAME"));
                datob=rs.getString("STU_DOB");
                datoj=rs.getString("STU_JOIN_DATE");
                email.setText(rs.getString("STU_EMAIL"));
                mobile.setText(rs.getString("STU_MOB"));
                apt.setText(rs.getString("STU_APPARTMENT"));
                city.setText(rs.getString("STU_CITY"));
                state.setText(rs.getString("STU_STATE"));
                country.setText(rs.getString("STU_COUNTRY"));
                zip.setText(rs.getString("STU_ZIP"));
                par =Integer.parseInt(rs.getString("STU_IS_PARENT"));
                
             }
        date = new SimpleDateFormat("yyyy-MM-dd").parse(datob);
        dob.setDate(date);
        date = new SimpleDateFormat("yyyy-MM-dd").parse(datoj);
        doj.setDate(date);
        
        if(par==1)
            parent.setSelected(true);
        else
            parent.setSelected(false);
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "failed to set fields");
        }
        return true;
    }
    
    public void setsid(){
        String sql = "Select count(*) as cnt from STUDENT";
        int id=20;
        try {
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                id = Integer.parseInt(rs.getString("cnt"));
             }
            id++;
            sid.setText(""+id);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Execution failed");
        }
        
        
    }
    
    public boolean studexist(){
        String sql = "Select max(STU_NUM) as cnt from STUDENT";
        int id=0,id2;
        try {
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                id = Integer.parseInt(rs.getString("cnt"));
             }
         } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Execution failed");
        }
        id2=Integer.parseInt(sid.getText());
        if(id<id2 || id2==0)
          return false;
        else
            return true;
    }
    
    public void allowfields(Boolean a){
          fname.setEnabled(a);
          lname.setEnabled(a);
          mobile.setEnabled(a);
          dob.setEnabled(a);
          doj.setEnabled(a);
          email.setEnabled(a);
          parent.setEnabled(a);
          apt.setEnabled(a);
          city.setEnabled(a);
          state.setEnabled(a);
          country.setEnabled(a);
          zip.setEnabled(a);
          executebtn.setEnabled(a);
    }
    
    public boolean checknull(){
         if( fname.getText().equals("") ||
          lname.getText().equals("") ||
          mobile.getText().equals("") ||
          dob.getDate().equals("") ||
          doj.getDate().equals("") ||
          email.getText().equals("") ||
          apt.getText().equals("") ||
          city.getText().equals("") ||
          state.getText().equals("")||
          country.getText().equals("")||
          zip.getText().equals("")||
          executebtn.getText().equals(""))
             return false;
         else
             return true;
    }
    
    public void resetfields(){
        
        fname.setText("");
        parent.setSelected(false);
                lname.setText("");
                dob.setCalendar(null);
                doj.setCalendar(null);
                email.setText("");
                mobile.setText("");
                apt.setText("");
                city.setText("");
                state.setText("");
                country.setText("");
                zip.setText("");
                
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apt;
    private javax.swing.JTextField city;
    private javax.swing.JTextField country;
    private com.toedter.calendar.JDateChooser dob;
    private com.toedter.calendar.JDateChooser doj;
    private javax.swing.JTextField email;
    private javax.swing.JButton executebtn;
    private javax.swing.JTextField fname;
    private javax.swing.JComboBox<String> func;
    private javax.swing.JButton gen;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField mobile;
    private javax.swing.JCheckBox parent;
    private javax.swing.JTextField sid;
    private javax.swing.JTextField state;
    private javax.swing.JTextField zip;
    // End of variables declaration//GEN-END:variables
}
